#!/usr/bin/perl -w
#
# mkbd - A Perl program to generate HTML for a chess board.
#
# NOTE: Uses the non-standard Netscape <blink> tag to represent the
# selected cell (in addition to the standard bgcolor= attribute to
# the standard <td> tag).
#
# History:
#
#     1999-06-04: GNP: Genesis.
#
# Contributors:
#
#     GNP: Gregor N. Purdy
#
# Copyright (C) 1999-2006 Gregor N. Purdy. All rights reserved.
#

use strict;
use utf8;

my %pieces = (
  K => '&#9812;',
  Q => '&#9813;',
  R => '&#9814;',
  B => '&#9815;',
  N => '&#9816;',
  P => '&#9817;',

  k => '&#9818;',
  q => '&#9819;',
  r => '&#9820;',
  b => '&#9821;',
  n => '&#9822;',
  p => '&#9823;',
);

#
# The board for testing:
#

my $board = [
	[ qw(r n b q k b n r) ],
	[ qw(p p p p p p p p) ],
	[ qw(. . . . . . . .) ],
	[ qw(. . . . . . . .) ],
	[ qw(. . . . . . . .) ],
	[ qw(. . . . . . . .) ],
	[ qw(P P P P P P P P) ],
	[ qw(R N B Q K B N R) ]
];


#
# board_to_html()
#

sub board_to_html ($$$)
{
	my ($board, $sel_col, $sel_row) = @_;

	my @row_labels = qw(8 7 6 5 4 3 2 1);
	my @col_labels = qw(a b c d e f g h);

	my @colors = qw(black white);
	my @sel_colors = qw(gray silver);

	print "<table class='board'>\n";

	print "<tr><th></th>";
	foreach(@col_labels) { print "<th>$_</th>"; }
	print "<th></th></tr>\n";

	my $row_num = 0;
	my $col_num = 0;

	foreach my $row (@$board) {
		print "<tr>";
		print "<th>$row_labels[$row_num]</th>";

		$col_num = 0;

		foreach my $cell (@$row) {
			my $piece = $pieces{$cell} // '&nbsp;';

			if (($cell eq uc($cell)) && ($cell ne lc($cell))) {
				my $bg = $pieces{lc $cell};
				print "<td><div class='bg'>$bg</div><div class='fg'>$piece</div></td>"
#				print "<td><div class='fg'>$piece</div><div class='bg'>$bg</div></td>"
			}
			else {
				print "<td>$piece</td>";
			}

			$col_num++;
		}

		print "<th>$row_labels[$row_num]</th>";
		print "</tr>\n";

		$row_num++;
	}

	print "<tr><th></th>";
	foreach(@col_labels) { print "<th>$_</th>"; }
	print "<th></th></tr>\n";

	print "</table>\n";
}


#
# MAIN PROGRAM:
#

print q{
<html>
<head>
<title>Chess Board</title>
<style type="text/css">
  table.board {
    font-family: sans-serif;
    font-size: 16pt;
    border-collapse: collapse;
    border: 0;
    text-align: center;
  }

  table.board th {
    font-weight: normal;
    margin: 0;
    padding: 0;
    height: 20pt;
    width: 20pt;
  }

  table.board td {
    font-weight: normal;
    position: relative;
    margin: 0;
    padding: 0;
    height: 20pt;
    width: 20pt;
  }

  table.board td div {
    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
    padding: 0;
    height: 20pt;
    width: 20pt;
  }

  table.board td div.bg { color: white; }
  table.board td div.fg { color: black; }

  table.board tr:nth-child(even) td:nth-child(even) { background-color: ForestGreen }
  table.board tr:nth-child(even) td:nth-child(odd) { background-color: AntiqueWhite }

  table.board tr:nth-child(odd) td:nth-child(even) { background-color: AntiqueWhite }
  table.board tr:nth-child(odd) td:nth-child(odd) { background-color: ForestGreen }
</style>
</head>
<body>
<p>This is an example of a chess board:</p>
<hr>
};

board_to_html($board, 3, 6);

print q{
<hr>
<p>How do you like it?</p>
</body>
</html>
};


#
# End of file.
#

